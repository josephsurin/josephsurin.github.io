{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/post/2020-02-19-tshark-cheatsheet",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/post/2020-02-19-tshark-cheatsheet\",\n  \"title\": \"tshark Cheatsheet\",\n  \"date\": \"2020-02-19T00:00:00.000Z\",\n  \"tags\": \"ctf,infosec,random\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"BASICS\"), mdx(\"p\", null, \"Read from a pcap: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap>\")), mdx(\"p\", null, \"Print TCP conversations: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap> -z conv,tcp\"), \" (add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-q\"), \" to suppress packet info)\"), mdx(\"p\", null, \"Print field-formatted: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap> -T fields -e <field1> -e <field2> ...\")), mdx(\"p\", null, \"List User-Agents: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap> -T fields -e http.user_agent\")), mdx(\"p\", null, \"Print X.509 certs: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap> -T fields -R \\\"ssl.handshake.certificate\\\" -e x509sat.printableString\")), mdx(\"p\", null, \"Apply a display filter: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap> -Y <display filter>\")), mdx(\"p\", null, \"Print packet summaries for TCP packets to port 71: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap> -Y \\\"tcp.dstport == 71\\\"\")), mdx(\"p\", null, \"Display contents of TCP stream between 10.0.0.1 port 123 and 10.0.0.2 port 456: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap> -z \\\"follow,tcp,ascii,10.0.0.1:123,10.0.0.2:456\\\"\")), mdx(\"p\", null, \"Decrypt WPA traffic (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-o <pref>:<val>\"), \" overrides preference) and print http file data: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap> -o wlan.enable_decryption:TRUE -o \\\"uat:80211_keys:\\\\\\\"wpa-pwd\\\\\\\",\\\\\\\"password:<w1F1-P4ssw0rD\\\\\\\"\\\" -T fields -e http.file_data\")), mdx(\"p\", null, \"Decrypt using SSL keys: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap> -o 'uat:rsa_keys:\\\"./server_private_key.pem\\\",\\\"\\\"' -Tfields -e text \")), mdx(\"p\", null, \"Decrypt with pre master secret: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap> -o 'tls.keylog_file:./premastersecret.txt' -T fields -e http.request.uri\")), mdx(\"p\", null, \"Show detailed view of http packets and summaries of others: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -r <file.pcap> -O http\")), mdx(\"p\", null, \"List possible fields: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tshark -G\")), mdx(\"h2\", null, \"Fields Cheatsheet\"), mdx(\"p\", null, \"The field \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text\"), \" on its own may sometimes work (e.g. for HTTP and FTP)\"), mdx(\"h4\", null, \"Ethernet \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"eth\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.wireshark.org/docs/dfref/e/eth.html\"\n  }, \"https://www.wireshark.org/docs/dfref/e/eth.html\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addr\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"len\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dst\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lg\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"trailer\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ig\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"multicast\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\")), mdx(\"h4\", null, \"IPv4 \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"ip\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.wireshark.org/docs/dfref/i/ip.html\"\n  }, \"https://www.wireshark.org/docs/dfref/i/ip.html\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addr\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checksum\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checksum_bad\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checksum_good\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dst\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dst_host\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flags\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flags.df\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flags.mf\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flags.rb\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hdr_len\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"host\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"len\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"proto\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reassembled_in\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src_host\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tos\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tos.cost\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tos.delay\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tos.precedence\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tos.reliability\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tos.throughput\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ttl\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"version\")), mdx(\"h4\", null, \"IPv6 \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"ipv6\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.wireshark.org/docs/dfref/i/ipv6.html\"\n  }, \"https://www.wireshark.org/docs/dfref/i/ipv6.html\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"addr\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dst\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dst_host\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hlim\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"host\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nxt\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"opt.pad1\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"opt.padn\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"plen\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reassembled_in\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src_host\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"version\")), mdx(\"h4\", null, \"TCP \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"tcp\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.wireshark.org/docs/dfref/t/tcp.html\"\n  }, \"https://www.wireshark.org/docs/dfref/t/tcp.html\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ack\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checksum\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checksum_bad\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checksum_good\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"continuation_to\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dstport\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flags\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"flags.{ack,cwr,ecn,fin,push,reset,syn,urg}\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hdr_len\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"len\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nxtseq\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"options\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"options.{cc,ccecho,ccnew,echo,echo_reply,md5,mss,mss_val,qs,sack,sack_le.sack_perm,sack_re,time_stamp,wscale,wscale_val}\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pdu.{last_frame,size,time}\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"port\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reassembled_in\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"segment\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"segment.{error,multipletails,overlap,overlap.conflict,toolongfragment}\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"segments\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"seq\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"srcport\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"time_delta\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"time_relative\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"urgent_pointer\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"window_size\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"payload\")), mdx(\"h4\", null, \"UDP \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"udp\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.wireshark.org/docs/dfref/u/udp.html\"\n  }, \"https://www.wireshark.org/docs/dfref/u/udp.html\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checksum\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checksum_bad\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checksum_good\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dstport\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"length\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"port\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"srcport\")), mdx(\"h4\", null, \"HTTP \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"http\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.wireshark.org/docs/dfref/h/http.html\"\n  }, \"https://www.wireshark.org/docs/dfref/h/http.html\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"accept\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"accept_encoding\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"accept_language\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"authbasic\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"authorization\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cache_control\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"connection\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content_encoding\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content_length\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content_type\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cookie\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"date\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"file_data\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"host\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"last_modified\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"location\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"notification\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"proxy_authenticate\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"proxy_authorization\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"proxy_connect_host\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"proxy_connect_port\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"referer\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"request\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"request.{full_uri,method,uri,version}\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"request.uri.{path,query,query.parameter}\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"response\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"response.{code,code.desc,phrase}\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"server\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"set_cookie\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"transfer_encoding\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"user_agent\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"www_authenticate\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"x_forwarded_for\")), mdx(\"h4\", null, \"SSL \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"ssl\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.wireshark.org/docs/dfref/s/ssl.html\"\n  }, \"https://www.wireshark.org/docs/dfref/s/ssl.html\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handshake\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handshake.{cert_status,cert_status_len,cert_status_type,cert_type,cert_types,cert_types_count,certificate,certificate_length,challenge,challenge_length,cipher_spec_len,cipher_suites_length,cipherspec,ciphersuiteciphersuites,clear_key_data,clear_key_lengthclient_cert_vrfy.sig,client_cert_crfy.sig_len,client_point,client_point_len,comp_method,comp_methods,comp_methods_length,connection_id,connection_id_length,encrypted_key,encrypted_key_length,epms,epms_len,exponent,exponent_len,extension.data,extension.len,modulus,modulus_len,identity,identity_len,server_point,server_point_len}\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"handshake.cert_type.{type,types,types_len}\")), mdx(\"h4\", null, \"FTP \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"ftp\")), mdx(\"p\", null, \"(not prefixed): \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ftp-data.command\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ftp-data.setup-method\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ftp-data.current-working-directory\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"active.{cip,nat,port}\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"command\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"February 19, 2020","path":"/post/2020-02-19-tshark-cheatsheet","title":"tshark Cheatsheet","tags":"ctf,infosec,random"}}},"pageContext":{"prev":{"fileAbsolutePath":"/media/winarch-shared/code/portfolio/src/posts/2020-03-13-utctf-2020-writeups/index.md","frontmatter":{"title":"UTCTF 2020 Writeups","path":"/post/2020-03-13-utctf-2020-writeups"}},"next":{"fileAbsolutePath":"/media/winarch-shared/code/portfolio/src/posts/2019-12-16-watevrctf-2019-writeups/index.md","frontmatter":{"title":"watevrCTF 2019 Writeups","path":"/post/2019-12-16-watevrctf-2019-writeups"}}}},
    "staticQueryHashes": ["63159454"]}